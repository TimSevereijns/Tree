name: Run Tests and Collect Coverage

on: [push]

jobs:
  codecov:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v1

      - name: Checkout Submodules
        run: git submodule sync --recursive && git submodule update --init --recursive

      - name: Update Software Repository
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update -qq
 
      - name: Install Python 3
        uses: actions/setup-python@v1
        with:
          python-version: '3.x'
          architecture: 'x64'

      - name: Install GCC 9
        run: |
          sudo apt-get install -qq g++-9
          sudo apt-get install -qq gcc-9
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 20
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 20
          sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 20
          sudo update-alternatives --config gcc
          sudo update-alternatives --config g++
          sudo update-alternatives --config gcov
          
      - name: Install LCov
        run: |
          wget https://github.com/linux-test-project/lcov/releases/download/v1.15/lcov-1.15.tar.gz
          tar -xvf lcov-1.15.tar.gz
          cd lcov-1.15 && sudo make install

      - name: Install & Sync Conan Dependencies
        run: |
          cd ${GITHUB_WORKSPACE}
          pip install conan
          mkdir conan && cd conan
          conan install ..

      - name: Build Project
        run: |
          cd ${GITHUB_WORKSPACE}
          mkdir build && cd build
          cmake -DCMAKE_BUILD_TYPE=Debug ..
          make tests

      - name: Run Tests
        run: |
          cd ${GITHUB_WORKSPACE}/build
          bin/tests
          
      - name: Collect Coverage
        run: |
          lcov --capture --directory . --output-file coverage.info
          lcov \
            --remove coverage.info '/usr/*' '*/third-party/*' '*/tests/*' '*/benchmark/*' '*/conan/*' \
            --output-file coverage.info
          lcov --list coverage.info
          
      - name: Upload Coverage Report
        run: |
          export CODECOV_TOKEN=${{ secrets.CodeCov }}
          bash <(curl -s https://codecov.io/bash) -f coverage.info || \
          echo "Codecov did not collect coverage reports"
